{"version":3,"sources":["../src/module.js"],"names":["MetricsPanelCtrl","$","_","moment","d3","getTemplateSrv","PanelEvents","templateSrv","MultistatPanelCtrl","$scope","$injector","panelDefaults","timeFrom","timeShift","BarPadding","MultiBarPadding","BaseLineColor","BaseLineWidth","BaseLineValue","DateTimeColName","DateFormat","TooltipDateFormat","FlashHighLimitBar","FlashLowLimitBar","HighAxisColor","HighAxisWidth","HighBarColor","RecolorColName","HighLimitBarColor","HighLimitBarFlashColor","HighLimitBarFlashTimeout","HighLimitLineColor","HighLimitValue","HighLmitLineWidth","HighSideMargin","Horizontal","LabelColName","EndColName","LabelNameFilter","LabelColor","OutOfRangeLabelColor","GroupLabelColor","LabelFontSize","GroupLabelFontSize","GroupGap","LabelMargin","Legend","Links","LowAxisColor","LowAxisWidth","LowBarColor","LowLimitBarColor","LowLimitBarFlashColor","LowLimitBarFlashTimeout","LowLimitLineColor","LowLimitValue","LowLmitLineWidth","LowSideMargin","MaxLineColor","MaxLineWidth","MaxLineValue","MinLineColor","MinLineWidth","MinLineValue","RecolorHighLimitBar","RecolorLowLimitBar","RecolorRules","ShowBaseLine","ShowDate","Aggregate","ShowHighLimitLine","ShowLabels","ShowGroupLabels","ShowLeftAxis","ShowLowLimitLine","ShowMaxLine","ShowMinLine","ShowRightAxis","ShowValues","SortColName","SortDirection","TZOffsetHours","ToolTipType","ToolTipFontSize","ValueColName","Values","ValueDecimals","ValueColor","ValueFontSize","OddRowColor","EvenRowColor","OutlineColor","GroupSortString","GroupCols","GroupNameFilter","ScaleFactor","ValuePosition","LableAngle","ShowBars","ShowLines","LineWidth","LineColor","DotSize","DotColor","CurveType","defaults","panel","length","Name","events","on","dataReceived","onDataReceived","bind","dataError","onDataError","render","onRender","dataSnapshotLoad","onDataSnapshotLoad","editModeInitialized","onInitEditMode","className","id","obj","names","value","name","shift","updateNamedValue","Number","snapshotData","err","seriesList","data","displayStatusMessage","status","statusText","metricNames","sortDirections","aggregations","fontSizes","valuePositions","curveTypes","matchTypes","tooltipTypes","addEditorTab","cols","rows","type","columns","i","text","cols0","concat","index","up","ctrl","splice","dateTimeCol","$title","elem","closest","find","$maxDate","append","children","last","maxDate","dd","add","toUpperCase","fromNow","show","format","hide","msg","html","labelCol","endCol","sortCol","groupCol","recolorCol","forEach","colName","GroupColName","Value","Col","SelectedValues","filter","Selected","groupedLabelFunc","regex","RegExp","matchingRows","label","match","push","oo","nest","key","rollup","d","entries","x","Object","values","assign","sum","Array","from","mean","valueCol","max","min","groupNameOffset","replace","groupedRows","regexGroupRows","matchingGroups","groupName","groupSortString","sort","a","b","aPos","search","bPos","localeCompare","$container","svg","select","attr","$legend","legendValues","deselectedClassName","css","click","window","event","ctrlKey","v","CTRL","$apply","h","height","w","width","buildDateHtml","labelMargin","isNumeric","lowSideMargin","highSideMargin","selectAll","interrupt","barPadding","multiBarPadding","baseLineValue","minLineValue","maxLineValue","highLimitValue","recolorHighLimitBar","lowLimitValue","recolorLowLimitBar","flashHighLimitBar","flashLowLimitBar","tooltipType","tooltipFontSize","panelID","tooltipDivID","minValue","col","val","maxValue","remove","sortData","sortDirection","ascending","y","xx","yy","translateValues","s","s1","re","g","exec","getTooltipContent","isArray","cc","toFixed","l","url","newtab","isInTooltip","$panel","$panelContent","panelContent","tooltipShow","parent","style","tooltipDiv","classed","tooltipHide","$tooltipDiv","tooltipWidth","tooltipHeight","minTop","mouseCoordinates","mouse","node","Left","Top","panelWidth","panelHeight","transition","duration","cancel","scaleAndClipValue","getBarColor","valueDef","recolorString","recolorRule","r","pattern","matchType","test","indexOf","color","Option","plotGroupHorizontal","numRows","left","hh","dh","labels","map","Math","random","toString","substr","labelScale","scaleBand","domain","rangeRound","paddingInner","paddingOuter","stripedata","range","stripeScale","oddeven","enter","step","g1","maxValueWidth","gap","bandwidth","each","thisWidth","getComputedTextLength","maxLabelWidth","labelAngle","minvalue","maxvalue","bbox","getBBox","sin","PI","c","cos","abs","valueScale","scaleLinear","nice","vLine","strokeWidth","HighLimitLineWidth","LowLimitLineWidth","bw","curveFunc","curveLinear","curveMonotoneY","curveCardinal","curveCatmullRom","lineFunction","line","curve","points","ggHighSide","call","axisTop","ggLowSide","axisBottom","gcols","dw","pointsPerRow","rr","floor","u","totalPoints","rowOverheadHeight","rowHeight","ceil","nn","ii","plotGroupVertical","g2","maxValueHeight","thisHeight","maxLabelHeight","hLine","curveMonotoneX","axisLeft","tickSizeInner","tickSizeOuter","ticks","axisRight","pointsPerCol","colOverheadWidth","colWidth","ww","pulseHigh","highFlashRects","_groups","highRepeat","active","pulseLow","lowFlashRects","lowRepeat","renderingCompleted","refresh","scope","attrs","panelContentElem","templateUrl"],"mappings":"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","file":"module.js","sourcesContent":["/*jshint esversion: 6 */\n/*jshint -W087 */\n/*jshint -W014 */\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport $ from 'jquery';\nimport 'jquery.flot';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport './css/multistat-panel.css!';\nimport * as d3 from 'd3';\nimport { getTemplateSrv } from '@grafana/runtime';\nimport { PanelEvents } from '@grafana/data';\n//import \"@types/tinycolor2\";\n//import { xxx } from \"tinycolor2\";\n\nconst templateSrv = getTemplateSrv();\n\nclass MultistatPanelCtrl extends MetricsPanelCtrl {\n  /** @ngInject */\n  constructor($scope, $injector) {\n    super($scope, $injector);\n\n    var panelDefaults = {\n      timeFrom: null,\n      timeShift: null,\n      BarPadding: 10,\n      MultiBarPadding: 10,\n      BaseLineColor: '#ff0000',\n      BaseLineWidth: 1,\n      BaseLineValue: null,\n      DateTimeColName: 'date',\n      DateFormat: 'YYYY-MM-DD HH:mm:ss',\n      TooltipDateFormat: 'YYYY-MM-DD HH:mm:ss',\n      FlashHighLimitBar: false,\n      FlashLowLimitBar: false,\n      HighAxisColor: '#ffffff',\n      HighAxisWidth: 1,\n      HighBarColor: 'rgb(120, 128, 0)',\n      RecolorColName: null,\n      HighLimitBarColor: '#ff0000',\n      HighLimitBarFlashColor: '#ffa500',\n      HighLimitBarFlashTimeout: 1000,\n      HighLimitLineColor: '#ff0000',\n      HighLimitValue: null,\n      HighLmitLineWidth: 1,\n      HighSideMargin: 22,\n      Horizontal: false,\n      LabelColName: '',\n      EndColName: '',\n      LabelNameFilter: '',\n      LabelColor: '#ffffff',\n      OutOfRangeLabelColor: '#ffffff',\n      GroupLabelColor: '#ffffff',\n      LabelFontSize: '100%',\n      GroupLabelFontSize: '200%',\n      GroupGap: 5,\n      LabelMargin: null,\n      Legend: false,\n      Links: [],\n      LowAxisColor: '#ffffff',\n      LowAxisWidth: 1,\n      LowBarColor: 'teal',\n      LowLimitBarColor: '#ff0000',\n      LowLimitBarFlashColor: '#ffa500',\n      LowLimitBarFlashTimeout: 200,\n      LowLimitLineColor: '#ff0000',\n      LowLimitValue: null,\n      LowLmitLineWidth: 1,\n      LowSideMargin: 22,\n      MaxLineColor: 'rgb(74, 232, 12)',\n      MaxLineWidth: 1,\n      MaxLineValue: null,\n      MinLineColor: '#ff0000',\n      MinLineWidth: 1,\n      MinLineValue: null,\n      RecolorHighLimitBar: false,\n      RecolorLowLimitBar: false,\n      RecolorRules: [],\n      ShowBaseLine: false,\n      ShowDate: false,\n      Aggregate: 'last',\n      ShowHighLimitLine: false,\n      ShowLabels: true,\n      ShowGroupLabels: true,\n      ShowLeftAxis: true,\n      ShowLowLimitLine: false,\n      ShowMaxLine: false,\n      ShowMinLine: false,\n      ShowRightAxis: true,\n      ShowValues: true,\n      SortColName: 'value',\n      SortDirection: 'ascending',\n      TZOffsetHours: 0,\n      ToolTipType: '',\n      ToolTipFontSize: '100%',\n      ValueColName: '',\n      Values: [],\n      ValueDecimals: 2,\n      ValueColor: '#ffffff',\n      ValueFontSize: '100%',\n      OddRowColor: 'rgba(33, 33, 34, 0.92)',\n      EvenRowColor: 'rgba(61, 61, 64, 0.78)',\n      OutlineColor: 'rgba(245, 255, 0, 0.1)',\n      GroupSortString: '',\n      GroupCols: 0,\n      GroupNameFilter: '',\n      ScaleFactor: 1,\n      ValuePosition: 'top',\n      LableAngle: 0,\n      ShowBars: true,\n      ShowLines: false,\n      LineWidth: 5,\n      LineColor: 'blue',\n      DotSize: 10,\n      DotColor: 'white',\n      CurveType: 'Monotone',\n    };\n\n    _.defaults(this.panel, panelDefaults);\n\n    // Migrate old configurations from single value column to array of value columns\n    if (this.panel.Values.length === 0) {\n      this.panel.Values = [\n        {\n          Name: this.panel.ValueColName,\n          LowBarColor: this.panel.LowBarColor,\n          HighBarColor: this.panel.HighBarColor,\n        },\n      ];\n      delete this.panel.ValueColName;\n      delete this.panel.LowBarColor;\n      delete this.panel.HighBarColor;\n    }\n\n    /*\n    console.log('Listing variables');\n    templateSrv.getVariables().forEach((v) => {      \n      console.log(JSON.stringify(v, null, 2));\n      if (v.current){\n        console.log(\"dashboard variable[\" + v.name + \"]=\" + v.current.value);\n        this.updateNamedValue(this.panel, v.name.split(\"_\"), v.current.value);\n      }\n    });\n    */\n\n    this.events.on(\n      PanelEvents.dataReceived,\n      this.onDataReceived.bind(this),\n      $scope\n    );\n\n    this.events.on(PanelEvents.dataError, this.onDataError.bind(this), $scope);\n\n    this.events.on(PanelEvents.render, this.onRender.bind(this));\n\n    this.events.on(\n      PanelEvents.dataSnapshotLoad,\n      this.onDataSnapshotLoad.bind(this)\n    );\n    this.events.on(\n      PanelEvents.editModeInitialized,\n      this.onInitEditMode.bind(this)\n    );\n    this.events.on(\n      PanelEvents.dataSnapshotLoad,\n      this.onDataSnapshotLoad.bind(this)\n    );\n    this.className = 'michaeldmoore-multistat-panel-' + this.panel.id;\n  }\n\n  updateNamedValue(obj, names, value) {\n    let name = names.shift();\n    if (obj[name]) {\n      if (names.length) this.updateNamedValue(obj[name], names, value);\n      else obj[name] = Number(value);\n    }\n  }\n\n  onDataSnapshotLoad(snapshotData) {\n    this.onDataReceived(snapshotData);\n  }\n\n  onDataError(err) {\n    this.seriesList = [];\n    this.data = [];\n    this.displayStatusMessage(\n      'Query failure, Status=' + err.status + ', ' + err.statusText\n    );\n  }\n\n  onInitEditMode() {\n    this.metricNames = [\n      'min',\n      'max',\n      'avg',\n      'current',\n      'total',\n      'name',\n      'first',\n      'delta',\n      'diff',\n      'range',\n    ];\n    this.sortDirections = ['none', 'ascending', 'descending'];\n    this.aggregations = ['all', 'last', 'first', 'mean', 'max', 'min', 'sum'];\n    this.fontSizes = [\n      '20%',\n      '30%',\n      '50%',\n      '70%',\n      '80%',\n      '100%',\n      '110%',\n      '120%',\n      '150%',\n      '170%',\n      '200%',\n      '250%',\n      '300%',\n      '350%',\n      '400%',\n    ];\n    this.valuePositions = ['bar base', 'bar end', 'top'];\n    this.curveTypes = ['Linear', 'Monotone', 'Cardinal', 'Catmull-Rom'];\n    this.matchTypes = ['exact', 'subset', 'list', 'reg-ex'];\n    this.tooltipTypes = ['light', 'dark'];\n    this.addEditorTab(\n      'Columns',\n      'public/plugins/michaeldmoore-multistat-panel/columns.html',\n      2\n    );\n    this.addEditorTab(\n      'Layout',\n      'public/plugins/michaeldmoore-multistat-panel/layout.html',\n      3\n    );\n    this.addEditorTab(\n      'Grouping',\n      'public/plugins/michaeldmoore-multistat-panel/grouping.html',\n      4\n    );\n    this.addEditorTab(\n      'Options',\n      'public/plugins/michaeldmoore-multistat-panel/options.html',\n      5\n    );\n    this.addEditorTab(\n      'Lines-and-Limits',\n      'public/plugins/michaeldmoore-multistat-panel/linesandlimits.html',\n      6\n    );\n    this.addEditorTab(\n      'Bar links',\n      'public/plugins/michaeldmoore-multistat-panel/barlinks.html',\n      7\n    );\n  }\n\n  onDataReceived(data) {\n    this.cols = [];\n    // console.log('onDataReceived(' + JSON.stringify(data) + ')');\n    if (data.length == 0) {\n      this.displayStatusMessage('No data to show');\n      this.data = data;\n      this.rows = null;\n      this.render();\n    } else if (data[0].type == 'table' || data[0].columns) {\n      this.data = data[0];\n\n      for (let i = 0; i < this.data.columns.length; i++)\n        this.cols[i] = this.data.columns[i].text;\n      this.cols0 = [''].concat(this.cols);\n\n      this.render();\n    } else {\n      this.displayStatusMessage('Multistat only supports Table datasets');\n      this.data = data;\n      this.rows = null;\n      this.render();\n    }\n  }\n\n  onReorderValues(index, up) {\n    const Values = this.ctrl.panel.Values;\n    if (up) {\n      if (index) Values[index] = Values.splice(index - 1, 1, Values[index])[0];\n    } else {\n      if (index + 1 < Values.length)\n        Values[index] = Values.splice(index + 1, 1, Values[index])[0];\n    }\n\n    this.render();\n  }\n\n  onReorderRecolorRules(index, up) {\n    const RecolorRules = this.ctrl.panel.RecolorRules;\n    if (up) {\n      if (index)\n        RecolorRules[index] = RecolorRules.splice(\n          index - 1,\n          1,\n          RecolorRules[index]\n        )[0];\n    } else {\n      if (index + 1 < RecolorRules.length)\n        RecolorRules[index] = RecolorRules.splice(\n          index + 1,\n          1,\n          RecolorRules[index]\n        )[0];\n    }\n\n    this.render();\n  }\n\n  onReorderLinks(index, up) {\n    const Links = this.ctrl.panel.Links;\n    if (up) {\n      if (index) Links[index] = Links.splice(index - 1, 1, Links[index])[0];\n    } else {\n      if (index + 1 < Links.length)\n        Links[index] = Links.splice(index + 1, 1, Links[index])[0];\n    }\n\n    this.render();\n  }\n\n  buildDateHtml(dateTimeCol) {\n    var $title = this.elem.closest('.panel-container').find('.panel-title');\n    var $maxDate = $title.find('span.michaeldmoore-multistat-panel-maxDate');\n\n    if ($maxDate.length == 0)\n      $maxDate = $title\n        .append('<span class=\"michaeldmoore-multistat-panel-maxDate\"/>')\n        .children()\n        .last();\n\n    if (dateTimeCol != -1 && this.panel.ShowDate) {\n      var maxDate = this.rows[0][dateTimeCol];\n\n      for (let i = 1; i < this.rows.length; i++) {\n        if (maxDate < this.rows[i][dateTimeCol])\n          maxDate = this.rows[i][dateTimeCol];\n      }\n\n      var dd = moment(maxDate).add(this.panel.TZOffsetHours, 'h');\n\n      if (this.panel.DateFormat.toUpperCase() == 'ELAPSED')\n        $maxDate.text(dd.fromNow()).show();\n      else $maxDate.text(dd.format(this.panel.DateFormat)).show();\n    } else $maxDate.hide();\n  }\n\n  displayStatusMessage(msg) {\n    this.elem.html(\n      \"<div class='michaeldmoore-multistat-panel-statusmessage'>\" +\n        msg +\n        '</div>'\n    );\n  }\n\n  onRender() {\n    if (this.data != null && this.data.rows && this.data.rows.length) {\n      var cols = this.cols;\n      var dateTimeCol = -1;\n      var labelCol = -1;\n      var endCol = -1;\n      var sortCol = 0;\n      var groupCol = -1;\n      var recolorCol = -1;\n\n      cols.forEach((colName, i) => {\n        if (colName == this.panel.DateTimeColName) dateTimeCol = i;\n        if (colName == this.panel.LabelColName) labelCol = i;\n        if (colName == this.panel.EndColName) endCol = i;\n        if (colName == this.panel.SortColName) sortCol = i;\n        if (colName == this.panel.GroupColName) groupCol = i;\n        if (colName == this.panel.RecolorColName) recolorCol = i;\n\n        this.panel.Values.forEach((Value) => {\n          if (colName == Value.Name) {\n            Value.Col = i;\n          }\n        });\n      });\n\n      var SelectedValues = this.panel.Values.filter(\n        (value) => value.Col >= 0 && value.Selected\n      );\n\n      //console.log('onRender: this.data.rows\\n'+JSON.stringify(this.data.rows));\n\n      const groupedLabelFunc = function (obj) {\n        if (groupCol != -1) return obj[groupCol] + ':' + obj[labelCol];\n        else return obj[labelCol];\n      };\n\n      if (this.panel.LabelNameFilter.length > 0 && labelCol != -1) {\n        var regex = new RegExp(this.panel.LabelNameFilter, '');\n        this.matchingRows = [];\n        for (let i = 0; i < this.data.rows.length; i++) {\n          var dd = this.data.rows[i];\n          var label = dd[labelCol];\n          if (label.match(regex) != null) this.matchingRows.push(dd);\n        }\n\n        if (this.matchingRows.length == 0) {\n          this.displayStatusMessage(\n            \"No data.  Regex filter '\" +\n              this.panel.LabelNameFilter +\n              \"' eliminated all \" +\n              this.data.rows.length +\n              ' rows from current query'\n          );\n          return;\n        }\n      } else this.matchingRows = this.data.rows;\n\n      if (\n        this.panel.Aggregate != 'all' &&\n        labelCol != -1 &&\n        SelectedValues.length > 0\n      ) {\n        var oo = [];\n        this.rows = [];\n        switch (this.panel.Aggregate) {\n          case 'first':\n            this.rows = d3\n              .nest()\n              .key(groupedLabelFunc)\n              .rollup(function (d) {\n                return d[0];\n              })\n              .entries(this.matchingRows)\n              .forEach(function (x) {\n                oo.push(x.value);\n              });\n            this.rows = oo;\n            break;\n\n          case 'last':\n            this.rows = d3\n              .nest()\n              .key(groupedLabelFunc)\n              .rollup(function (d) {\n                return d[d.length - 1];\n              })\n              .entries(this.matchingRows)\n              .forEach(function (x) {\n                oo.push(x.value);\n              });\n            this.rows = oo;\n            break;\n\n          case 'sum':\n            this.rows = d3\n              .nest()\n              .key(groupedLabelFunc)\n              .rollup(function (d) {\n                var dd = Object.values(Object.assign({}, d[d.length - 1]));\n                SelectedValues.forEach((value) => {\n                  dd[value.Col] = d3.sum(d, function (d) {\n                    return d[value.Col];\n                  });\n                });\n                return dd;\n              })\n              .entries(this.matchingRows)\n              .forEach(function (x) {\n                oo.push(x.value);\n              });\n            this.rows = Array.from(oo);\n            break;\n\n          case 'mean':\n            this.rows = d3\n              .nest()\n              .key(groupedLabelFunc)\n              .rollup(function (d) {\n                var dd = Object.values(Object.assign({}, d[d.length - 1]));\n                SelectedValues.forEach((value) => {\n                  dd[value.Col] = d3.mean(d, function (d) {\n                    return d[value.Col];\n                  });\n                });\n                return dd;\n              })\n              .entries(this.matchingRows)\n              .forEach(function (x) {\n                oo.push(x.value);\n              });\n            this.rows = Array.from(oo);\n            break;\n\n          case 'mean':\n            this.rows = d3\n              .nest()\n              .key(groupedLabelFunc)\n              .rollup(function (d) {\n                var dd = Object.values(Object.assign({}, d[d.length - 1]));\n                dd[valueCol] = d3.mean(d, function (d) {\n                  return d[valueCol];\n                });\n                return dd;\n              })\n              .entries(this.matchingRows)\n              .forEach(function (x) {\n                oo.push(x.value);\n              });\n            this.rows = Array.from(oo);\n            break;\n\n          case 'max':\n            this.rows = d3\n              .nest()\n              .key(groupedLabelFunc)\n              .rollup(function (d) {\n                var dd = Object.values(Object.assign({}, d[d.length - 1]));\n                SelectedValues.forEach((value) => {\n                  dd[value.Col] = d3.max(d, function (d) {\n                    return d[value.Col];\n                  });\n                });\n                return dd;\n              })\n              .entries(this.matchingRows)\n              .forEach(function (x) {\n                oo.push(x.value);\n              });\n            this.rows = Array.from(oo);\n            break;\n\n          case 'min':\n            this.rows = d3\n              .nest()\n              .key(groupedLabelFunc)\n              .rollup(function (d) {\n                var dd = Object.values(Object.assign({}, d[d.length - 1]));\n                SelectedValues.forEach((value) => {\n                  dd[value.Col] = d3.min(d, function (d) {\n                    return d[value.Col];\n                  });\n                });\n                return dd;\n              })\n              .entries(this.matchingRows)\n              .forEach(function (x) {\n                oo.push(x.value);\n              });\n            this.rows = Array.from(oo);\n            break;\n        }\n      } else {\n        this.rows = this.matchingRows;\n      }\n\n      //console.log('after aggregation('+this.panel.Aggregate+') this.rows:\\n'+JSON.stringify(this.rows));\n\n      var groupNameOffset = this.panel.ShowGroupLabels\n        ? Number(this.panel.GroupLabelFontSize.replace('%', '')) * 0.15\n        : 0;\n\n      if (groupCol >= 0) {\n        this.groupedRows = d3\n          .nest()\n          .key(function (d) {\n            return d[groupCol];\n          })\n          .entries(this.rows);\n\n        if (this.panel.GroupNameFilter.length > 0) {\n          var regexGroupRows = new RegExp(this.panel.GroupNameFilter, '');\n          let matchingGroups = [];\n          for (let i = 0; i < this.groupedRows.length; i++) {\n            let groupName = this.groupedRows[i].key;\n            if (groupName.match(regexGroupRows) != null)\n              matchingGroups.push(this.groupedRows[i]);\n          }\n\n          if (matchingGroups.length > 0) this.groupedRows = matchingGroups;\n          else {\n            this.displayStatusMessage(\n              \"No groups.  Group Regex filter '\" +\n                this.panel.GroupNameFilter +\n                \"' eliminated all \" +\n                this.groupedRows.length +\n                ' groups from current query'\n            );\n            return;\n          }\n        }\n\n        let groupSortString = this.panel.GroupSortString;\n\n        this.groupedRows.sort(function (a, b) {\n          var aPos = groupSortString.search(a.key);\n          var bPos = groupSortString.search(b.key);\n\n          if (aPos == bPos) return a.key.localeCompare(b.key);\n          else if (aPos == -1) return 1;\n          else if (bPos == -1) return -1;\n          else return aPos - bPos;\n        });\n      } else {\n        this.groupedRows = null;\n      }\n\n      this.elem.html(\n        \"<div class='\" +\n          this.className +\n          \"' style='display: flex; flex-direction: column; height:100%; width:100%'>\" +\n          '</div>'\n      );\n\n      var $container = this.elem.find('div');\n\n      this.svg = d3\n        .select('.' + this.className)\n        .append('svg')\n        .attr('height', '100%');\n\n      if (this.panel.Legend) {\n        var $legend = $container\n          .append(\n            \"<div><p></p><ul class='michaeldmoore-multistat-panel-legend'></ul></div>\"\n          )\n          .find('ul');\n\n        const legendValues = this.panel.Values.filter(\n          (value) => value.Col >= 0\n        );\n        legendValues.forEach((value, i) => {\n          ///////////////////////////////////////////////////////////////////////////////\n          // Be careful with this - the toggling/selection logic is quite complicated. //\n          ///////////////////////////////////////////////////////////////////////////////\n          let deselectedClassName = value.Selected\n            ? ''\n            : \" class='michaeldmoore-multistat-panel-legend-deselected'\";\n          $legend\n            .append('<li' + deselectedClassName + '>' + value.Name + '</li>')\n            .children()\n            .last()\n            .css('background-color', value.HighBarColor)\n            .css('color', this.panel.ValueColor)\n            .click(function () {\n              if (window.event.ctrlKey) {\n                // toggle this item only\n                value.Selected = !value.Selected;\n              } else {\n                if (!value.Selected || SelectedValues.length != 1) {\n                  // deselect everything\n                  legendValues.forEach((v) => (v.Selected = false));\n                  // and re-select this one;\n                  value.Selected = true;\n                } else {\n                  legendValues.forEach((v) => (v.Selected = true));\n                }\n              }\n              // force a re-render\n              CTRL.$scope.$apply(() => {\n                CTRL.render();\n              });\n            });\n        });\n      }\n\n      var h = $container.find('svg').height();\n      var w = $container.width() - 15;\n\n      this.buildDateHtml(dateTimeCol);\n\n      var labelMargin =\n        $.isNumeric(this.panel.LabelMargin) && this.panel.LabelMargin >= 0\n          ? this.panel.LabelMargin\n          : null;\n      var lowSideMargin =\n        this.panel.LowSideMargin >= 0 ? this.panel.LowSideMargin : 0;\n      var highSideMargin =\n        this.panel.HighSideMargin >= 0 ? this.panel.HighSideMargin : 0;\n\n      this.svg\n        .selectAll('rect.michaeldmoore-multistat-panel-bar.highflash')\n        .interrupt();\n\n      this.svg\n        .selectAll('rect.michaeldmoore-multistat-panel-bar.lowflash')\n        .interrupt();\n\n      var id = this.panel.id;\n      var barPadding = this.panel.BarPadding;\n      var multiBarPadding = this.panel.MultiBarPadding;\n      var baseLineValue = this.panel.BaseLineValue;\n      var minLineValue = this.panel.MinLineValue;\n      var maxLineValue = this.panel.MaxLineValue;\n      var highLimitValue = this.panel.HighLimitValue;\n      var HighLimitBarColor = this.panel.HighLimitBarColor;\n      var HighLimitBarFlashColor = this.panel.HighLimitBarFlashColor;\n      var HighLimitBarFlashTimeout = this.panel.HighLimitBarFlashTimeout;\n      var recolorHighLimitBar = this.panel.RecolorHighLimitBar;\n      var Links = this.panel.Links;\n      var lowLimitValue = this.panel.LowLimitValue;\n      var LowLimitBarColor = this.panel.LowLimitBarColor;\n      var LowLimitBarFlashColor = this.panel.LowLimitBarFlashColor;\n      var LowLimitBarFlashTimeout = this.panel.LowLimitBarFlashTimeout;\n      var RecolorRules = this.panel.RecolorRules;\n      var recolorLowLimitBar = this.panel.RecolorLowLimitBar;\n      var flashHighLimitBar = this.panel.FlashHighLimitBar;\n      var flashLowLimitBar = this.panel.FlashLowLimitBar;\n      var tooltipType = this.panel.ToolTipType;\n      var tooltipFontSize = this.panel.ToolTipFontSize;\n      var DateTimeColName = this.panel.DateTimeColName;\n      var TooltipDateFormat = this.panel.TooltipDateFormat;\n      var ValueColName = this.panel.ValueColName;\n      var ValueDecimals = this.panel.ValueDecimals;\n      var OddRowColor = this.panel.OddRowColor;\n      var EvenRowColor = this.panel.EvenRowColor;\n      var OutlineColor = this.panel.OutlineColor;\n      var TZOffsetHours = this.panel.TZOffsetHours;\n      var GroupCols = this.panel.GroupCols;\n      var GroupGap = this.panel.GroupGap;\n      var ScaleFactor = Number(this.panel.ScaleFactor);\n      var ValuePosition = this.panel.ValuePosition;\n\n      var panelID = 'michaeldmoore-multistat-panel-' + id;\n      var tooltipDivID = 'michaeldmoore-multistat-panel-tooltip-' + id;\n\n      var minValue =\n        SelectedValues.length &&\n        d3.min(this.rows, function (d) {\n          let min = Number(d[SelectedValues[0].Col]);\n          for (var i = 1; i < SelectedValues.length; i++) {\n            let col = SelectedValues[i].Col;\n            let val = Number(d[col]);\n            if (min > val) min = val;\n          }\n          return min * ScaleFactor;\n        });\n      if ($.isNumeric(minLineValue) == false) minLineValue = minValue;\n\n      var maxValue =\n        SelectedValues.length &&\n        d3.max(this.rows, function (d) {\n          let max = Number(d[SelectedValues[0].Col]);\n          for (var i = 1; i < SelectedValues.length; i++) {\n            let col = SelectedValues[i].Col;\n            let val = Number(d[col]);\n            if (max < val) max = val;\n          }\n          return max * ScaleFactor;\n        });\n      if ($.isNumeric(maxLineValue) == false) maxLineValue = maxValue;\n\n      if ($.isNumeric(baseLineValue) == false) baseLineValue = 0;\n\n      if (minLineValue > baseLineValue) minLineValue = baseLineValue;\n\n      if ($.isNumeric(lowLimitValue) && minLineValue > lowLimitValue)\n        minLineValue = lowLimitValue;\n\n      if (maxLineValue < baseLineValue) maxLineValue = baseLineValue;\n\n      if ($.isNumeric(highLimitValue) && maxLineValue < highLimitValue)\n        maxLineValue = highLimitValue;\n\n      $('#' + tooltipDivID).remove();\n\n      var sortData = function (data, sortDirection) {\n        if (sortDirection != 'none') {\n          var ascending = sortDirection == 'ascending';\n          data.sort(function (x, y) {\n            let xx = x[sortCol];\n            let yy = y[sortCol];\n\n            if ($.isNumeric(xx) && $.isNumeric(yy))\n              return ascending ? xx - yy : yy - xx;\n            else return ascending ? xx.localeCompare(yy) : yy.localeCompare(xx);\n          });\n        }\n      };\n\n      var translateValues = function (s, d) {\n        // lookup column index corresponding to the substitution tokens and replace with this bar's value\n        let s1 = s;\n        const re = /\\{[^}]+\\}/g;\n        let g = re.exec(s);\n        while (g) {\n          for (var i = 0; i < cols.length; i++) {\n            if (g == '{' + cols[i] + '}') {\n              s1 = s1.replace(g, d[i]);\n              break;\n            }\n          }\n          g = re.exec(s);\n        }\n        return s1;\n      };\n\n      var getTooltipContent = function (d) {\n        let html = '';\n        if (tooltipType) {\n          html +=\n            \"<table style='font-size:\" +\n            tooltipFontSize.replace('%', '') / 100 +\n            \"em'>\";\n          if (labelCol != -1)\n            html +=\n              \"<thead><tr class='michaeldmoore-multistat-panel-tooltip-title'><th colspan='2' align='center'>\" +\n              d[labelCol] +\n              '</th></tr></thead>';\n          if (Array.isArray(d)) {\n            html += '<tbody>';\n            for (var i = 0; i < d.length; i++) {\n              if (i != labelCol) {\n                var cc = cols[i];\n                var dd = d[i];\n\n                if (cc == DateTimeColName)\n                  dd = moment(dd)\n                    .add(TZOffsetHours, 'h')\n                    .format(TooltipDateFormat);\n                else if (cc == ValueColName && $.isNumeric(dd))\n                  dd = Number(dd).toFixed(ValueDecimals);\n\n                html += '<tr><td>' + cc + '</td><td>' + dd + '</td></tr>';\n              }\n            }\n            html += '</tbody></table>';\n          }\n        }\n\n        if (Links.length) {\n          html += '<table><tbody>';\n          Links.forEach((l) => {\n            html +=\n              \"<tr><td align='right'><i class='fa fa-link'></i></td><td><a href='\" +\n              translateValues(l.url, d) +\n              (l.newtab ? \"' target='_blank'\" : \"'\") +\n              '>' +\n              translateValues(l.name, d) +\n              '</a></td></tr>';\n          });\n          html += '</tbody></table>';\n        }\n        return html;\n      };\n\n      var isInTooltip = false;\n      var $panel;\n      var $panelContent;\n      var panelContent;\n      var tooltipShow = function (d) {\n        if ($('#' + tooltipDivID).length == 0) {\n          $panel = $('.' + panelID);\n          //          $panelContent = this.elem.closest(\".panel-content\");\n          $panelContent = $panel.parent().parent().parent().parent();\n          panelContent = d3.selectAll($panelContent);\n          panelContent\n            .append('div')\n            .attr('id', tooltipDivID)\n            .style('opacity', 0);\n        }\n\n        const tooltipDiv = d3.selectAll('#' + tooltipDivID);\n        tooltipDiv\n          .classed(\n            'michaeldmoore-multistat-panel-' + tooltipType + '-tooltip',\n            true\n          )\n          .html(getTooltipContent(d))\n          .on('mouseover', function () {\n            if (!isInTooltip) {\n              isInTooltip = true;\n              tooltipHide(true);\n            }\n          })\n          .on('mouseleave', function () {\n            isInTooltip = false;\n            tooltipHide(false);\n          });\n\n        const $tooltipDiv = $('#' + tooltipDivID);\n        const tooltipWidth = $tooltipDiv.width();\n        const tooltipHeight = $tooltipDiv.height();\n        const minTop = 28;\n\n        const mouseCoordinates = d3.mouse(panelContent.node());\n        let Left = mouseCoordinates[0] - tooltipWidth / 2;\n        let Top = mouseCoordinates[1] + minTop - tooltipHeight / 2;\n\n        let panelWidth = $panel.width();\n        let panelHeight = $panel.height();\n\n        if (Left < 0) Left = 0;\n        else if (Left > panelWidth - tooltipWidth)\n          Left = panelWidth - tooltipWidth;\n\n        if (Top < 0) Top = 0;\n        else if (Top > panelHeight + minTop - tooltipHeight)\n          Top = panelHeight + minTop - tooltipHeight;\n\n        tooltipDiv\n          .transition()\n          .duration(200)\n          .style('opacity', 1.0)\n          .style('left', Left + 'px')\n          .style('top', Top + 'px');\n      };\n\n      var tooltipHide = function (cancel) {\n        const tooltipDiv = d3.selectAll('#' + tooltipDivID);\n\n        if (cancel) {\n          //console.log(\"cancelling tooltip hide\");\n          tooltipDiv.transition().style('opacity', 1.0);\n        } else {\n          tooltipDiv\n            .transition()\n            .duration(2000)\n            .style('opacity', 0)\n            .on('end', function () {\n              d3.select(this)\n                .html('')\n                .classed(\n                  'michaeldmoore-multistat-panel-' + tooltipType + '-tooltip',\n                  false\n                );\n            });\n        }\n      };\n\n      var scaleAndClipValue = function (d) {\n        var val = d * ScaleFactor;\n        if (val > maxLineValue) val = maxLineValue;\n        if (val < minLineValue) val = minLineValue;\n\n        return val;\n      };\n\n      var getBarColor = function (d, valueDef) {\n        if (recolorCol != -1) {\n          let recolorString = d[recolorCol];\n\n          if (RecolorRules.length) {\n            if (recolorString) {\n              let recolorRule = RecolorRules.find((r) => {\n                if (r.pattern) {\n                  switch (r.matchType) {\n                    case 'reg-ex':\n                      let re = RegExp(r.pattern);\n                      return re.test(recolorString);\n\n                    case 'list':\n                      return r.pattern.indexOf(recolorString) != -1;\n\n                    case 'subset':\n                      return recolorString.indexOf(r.pattern) != -1;\n\n                    default:\n                      return r.pattern === recolorString;\n                  }\n                }\n                return false;\n              });\n\n              if (recolorRule) return recolorRule.color;\n            }\n          }\n\n          // no matching rule found, check if recolorString is a valid color\n          const s = new Option().style;\n          s.color = recolorString;\n          if (s.color !== '') return recolorString;\n        }\n\n        let value = d[valueDef.Col] * ScaleFactor;\n        if (recolorHighLimitBar && value > highLimitValue)\n          return HighLimitBarColor;\n        if (recolorLowLimitBar && value < lowLimitValue)\n          return LowLimitBarColor;\n\n        // All else fails, let's use the standard colors for this bar...\n        return value > baseLineValue\n          ? valueDef.HighBarColor\n          : valueDef.LowBarColor;\n      };\n\n      if (this.panel.Horizontal) {\n        var plotGroupHorizontal = function (\n          panel,\n          svg,\n          data,\n          numRows,\n          groupName,\n          groupNameOffset,\n          left,\n          w,\n          hh,\n          dh\n        ) {\n          // Draw border rectangle\n          /*svg.append(\"rect\")\n\t\t\t\t\t\t\t\t\t\t.attr(\"width\", w)\n\t\t\t\t\t\t\t\t\t\t.attr(\"height\", dh)\n\t\t\t\t\t\t\t\t\t\t.attr(\"x\", left)\n\t\t\t\t\t\t\t\t\t\t.attr(\"y\", hh)\n\t\t\t\t\t\t\t\t\t\t.attr(\"stroke\", \"yellow\");*/\n\n          sortData(data, panel.SortDirection);\n\n          // Add Above-High Side Group Names\n          if (groupName != '' && panel.ShowGroupLabels) {\n            svg\n              .append('text')\n              .text(groupName)\n              .attr('x', left + (labelMargin + w) / 2)\n              .attr('y', hh + groupNameOffset / 2)\n              .attr('font-family', 'sans-serif')\n              .attr('font-size', panel.GroupLabelFontSize)\n              .attr('fill', panel.GroupLabelColor)\n              .attr('background', 'blue')\n              .attr('text-anchor', 'middle')\n              .attr('dominant-baseline', 'central');\n          }\n\n          hh += groupNameOffset;\n          dh -= groupNameOffset;\n\n          // Draw border rectangle\n          /*svg.append(\"rect\")\n\t\t\t\t\t\t\t\t\t\t.attr(\"width\", w)\n\t\t\t\t\t\t\t\t\t\t.attr(\"height\", dh)\n\t\t\t\t\t\t\t\t\t\t.attr(\"x\", left)\n\t\t\t\t\t\t\t\t\t\t.attr(\"y\", hh)\n\t\t\t\t\t\t\t\t\t\t.attr(\"stroke\", \"#ffffff\");*/\n\n          var labels = data.map(function (d) {\n            return d[labelCol];\n          });\n          while (labels.length < numRows)\n            labels = labels.concat(\n              '_' + Math.random().toString(36).substr(2, 9)\n            );\n\n          var labelScale = d3\n            .scaleBand()\n            .domain(labels)\n            .rangeRound([hh + highSideMargin, hh + dh - lowSideMargin])\n            .paddingInner(barPadding / 100)\n            .paddingOuter(barPadding / 200);\n\n          var stripedata = data.concat(d3.range(data.length, numRows));\n\n          var stripeScale = d3\n            .scaleBand()\n            .domain(stripedata)\n            .rangeRound([hh + highSideMargin, hh + dh - lowSideMargin]);\n\n          // Draw background of alternating stripes\n          var oddeven = false;\n          svg\n            .append('g')\n            .selectAll('rect')\n            .data(stripedata)\n            .enter()\n            .append('rect')\n            .attr('class', 'michaeldmoore-multistat-panel-row')\n            .attr('width', w)\n            .attr('height', stripeScale.step())\n            .attr('x', left)\n            .attr('y', function (d) {\n              return stripeScale(d);\n            })\n            .attr('fill', function (d) {\n              oddeven = !oddeven;\n              return oddeven ? OddRowColor : EvenRowColor;\n            });\n\n          var g1 = svg\n            .append('g')\n            .selectAll('text')\n            .data(data)\n            .enter()\n            .append('g');\n\n          if (panel.ShowValues && panel.ValuePosition == 'top') {\n            var maxValueWidth = 0;\n            SelectedValues.forEach((valueDef, index) => {\n              let valueCol = valueDef.Col;\n              if (valueCol >= 0) {\n                let gap =\n                  SelectedValues.length > 1\n                    ? (labelScale.bandwidth() * multiBarPadding) /\n                      (SelectedValues.length - 1) /\n                      100\n                    : 0;\n                let height =\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\n                  SelectedValues.length;\n\n                g1.append('text')\n                  .text(function (d) {\n                    return (Number(d[valueCol]) * ScaleFactor).toFixed(\n                      ValueDecimals\n                    );\n                  })\n                  .attr('x', left + w)\n                  .attr('y', function (d, i) {\n                    return (\n                      labelScale(d[labelCol]) +\n                      height / 2 +\n                      (height + gap) * index\n                    );\n                  })\n                  .attr('font-family', 'sans-serif')\n                  .attr('font-size', panel.ValueFontSize)\n                  .attr('fill', panel.ValueColor)\n                  .attr('text-anchor', 'end')\n                  .attr('dominant-baseline', 'central')\n                  .each(function (d, i) {\n                    var thisWidth = this.getComputedTextLength();\n                    maxValueWidth = d3.max([maxValueWidth, thisWidth]);\n                  });\n              }\n            });\n\n            w -= maxValueWidth;\n          }\n\n          if (panel.ShowLabels) {\n            var maxLabelWidth = 0;\n            var labelAngle = Number(panel.LableAngle);\n            g1.append('text')\n              .text(function (d) {\n                return d[labelCol];\n              })\n              .attr('font-family', 'sans-serif')\n              .attr('font-size', panel.LabelFontSize)\n              .attr('fill', function (d, i) {\n                if (SelectedValues.length) {\n                  let minvalue = d[SelectedValues[0].Col] * ScaleFactor;\n                  let maxvalue = minvalue;\n                  SelectedValues.forEach((v) => {\n                    let value = d[v.Col] * ScaleFactor;\n                    if (minvalue > value) minvalue = value;\n                    if (maxvalue < value) maxvalue = value;\n                  });\n\n                  if (maxvalue > maxLineValue || minvalue < minLineValue)\n                    return panel.OutOfRangeLabelColor;\n                }\n                return panel.LabelColor;\n              })\n              .attr('text-anchor', 'middle')\n              .attr('dominant-baseline', 'central')\n              .attr('transform', function (d, i) {\n                var bbox = this.getBBox();\n                var s = Math.sin((labelAngle * Math.PI) / 180);\n                var c = Math.cos((labelAngle * Math.PI) / 180);\n                var b = Math.abs(bbox.width * s) + Math.abs(bbox.height * c);\n                var a = Math.abs(bbox.width * c) + Math.abs(bbox.height * s);\n\n                var y = labelScale(d[labelCol]) + labelScale.bandwidth() / 2;\n                var x = left + a / 2;\n                return (\n                  'translate(' + x + ',' + y + ') rotate(' + labelAngle + ')'\n                );\n              })\n              .each(function (d, i) {\n                var bbox = this.getBBox();\n                var s = Math.sin((labelAngle * Math.PI) / 180);\n                var c = Math.cos((labelAngle * Math.PI) / 180);\n                var b = Math.abs(bbox.width * s) + Math.abs(bbox.height * c);\n                var a = Math.abs(bbox.width * c) + Math.abs(bbox.height * s);\n\n                var thisWidth = a;\n                maxLabelWidth = d3.max([maxLabelWidth, thisWidth]);\n              });\n\n            if ($.isNumeric(labelMargin)) {\n              left += labelMargin;\n              w -= labelMargin;\n            } else {\n              left += maxLabelWidth;\n              w -= maxLabelWidth;\n            }\n          }\n\n          var valueScale = d3\n            .scaleLinear()\n            .domain([minLineValue, maxLineValue])\n            .range([left + labelMargin, left + w])\n            .nice();\n\n          function vLine(svg, value, color, strokeWidth) {\n            svg\n              .append('line')\n              .style('stroke', color)\n              .attr('stroke-width', strokeWidth == null ? 1 : strokeWidth)\n              .attr('y1', hh + highSideMargin)\n              .attr('x1', valueScale(value))\n              .attr('y2', hh + dh - lowSideMargin)\n              .attr('x2', valueScale(value));\n          }\n\n          if (panel.ShowBaseLine)\n            vLine(svg, baseLineValue, panel.BaseLineColor, panel.BaseLineWidth);\n\n          if (panel.ShowMaxLine)\n            vLine(svg, maxLineValue, panel.MaxLineColor, panel.MaxLineWidth);\n\n          if (panel.ShowMinLine)\n            vLine(svg, minLineValue, panel.MinLineColor, panel.MinLineWidth);\n\n          if (panel.ShowHighLimitLine)\n            vLine(\n              svg,\n              highLimitValue,\n              panel.HighLimitLineColor,\n              panel.HighLimitLineWidth\n            );\n\n          if (panel.ShowLowLimitLine)\n            vLine(\n              svg,\n              lowLimitValue,\n              panel.LowLimitLineColor,\n              panel.LowLimitLineWidth\n            );\n\n          if (panel.ShowBars) {\n            SelectedValues.forEach((valueDef, index) => {\n              let valueCol = valueDef.Col;\n              if (valueCol >= 0) {\n                let gap =\n                  SelectedValues.length > 1\n                    ? (labelScale.bandwidth() * multiBarPadding) /\n                      (SelectedValues.length - 1) /\n                      100\n                    : 0;\n                let height =\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\n                  SelectedValues.length;\n\n                g1.append('rect')\n                  .attr('class', 'michaeldmoore-multistat-panel-bar')\n                  .attr('width', function (d) {\n                    var val = scaleAndClipValue(d[valueCol]);\n                    return Math.abs(\n                      valueScale(val) - valueScale(baseLineValue)\n                    );\n                  })\n                  .attr('height', height)\n                  .attr('x', function (d) {\n                    var val = scaleAndClipValue(d[valueCol]);\n                    return d3.min([valueScale(val), valueScale(baseLineValue)]);\n                  })\n                  .attr('y', function (d, i) {\n                    return labelScale(d[labelCol]) + (height + gap) * index;\n                  })\n                  .attr('fill', function (d) {\n                    return getBarColor(d, valueDef);\n                  })\n                  .classed('highflash', function (d) {\n                    return (\n                      recolorHighLimitBar &&\n                      flashHighLimitBar &&\n                      d[valueCol] * ScaleFactor > highLimitValue\n                    );\n                  })\n                  .classed('lowflash', function (d) {\n                    return (\n                      recolorLowLimitBar &&\n                      flashLowLimitBar &&\n                      d[valueCol] * ScaleFactor < lowLimitValue\n                    );\n                  });\n              }\n            });\n          }\n\n          if (panel.ShowLines) {\n            var bw = labelScale.step();\n\n            if (panel.LineWidth) {\n              var curveFunc = d3.curveLinear;\n              switch (panel.CurveType) {\n                case 'Linear':\n                  curveFunc = d3.curveLinear;\n                  break;\n                case 'Monotone':\n                  curveFunc = d3.curveMonotoneY;\n                  break;\n                case 'Cardinal':\n                  curveFunc = d3.curveCardinal;\n                  break;\n                case 'Catmull-Rom':\n                  curveFunc = d3.curveCatmullRom;\n                  break;\n              }\n\n              var lineFunction = d3\n                .line()\n                .curve(curveFunc)\n                .x(function (d) {\n                  return d.x;\n                })\n                .y(function (d) {\n                  return d.y;\n                });\n\n              SelectedValues.forEach((value, index) => {\n                let gap =\n                  SelectedValues.length > 1\n                    ? (labelScale.bandwidth() * multiBarPadding) /\n                      (SelectedValues.length - 1) /\n                      100\n                    : 0;\n                let width =\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\n                  SelectedValues.length;\n\n                if (panel.LineWidth) {\n                  var points = [];\n                  for (var i = 0; i < data.length; i++) {\n                    var d = data[i];\n                    var y =\n                      labelScale(d[labelCol]) +\n                      width / 2 +\n                      (width + gap) * index;\n                    var x = valueScale(d[value.Col] * ScaleFactor);\n                    points.push({\n                      x,\n                      y,\n                    });\n                  }\n\n                  svg\n                    .append('path')\n                    .attr('d', lineFunction(points))\n                    .attr('stroke', panel.LineColor)\n                    .attr('stroke-width', panel.LineWidth)\n                    .attr('fill', 'none');\n                }\n\n                if (panel.DotSize) {\n                  g1.append('circle')\n                    .attr('r', panel.DotSize / 2.0)\n                    .attr('fill', panel.DotColor)\n                    .attr('cy', function (d) {\n                      return (\n                        labelScale(d[labelCol]) +\n                        width / 2 +\n                        (width + gap) * index\n                      );\n                    })\n                    .attr('cx', function (d) {\n                      return valueScale(d[value.Col] * ScaleFactor);\n                    });\n                }\n              });\n            }\n          }\n\n          if (panel.ShowValues && panel.ValuePosition != 'top') {\n            SelectedValues.forEach((valueDef, index) => {\n              let valueCol = valueDef.Col;\n              if (valueCol >= 0) {\n                let gap =\n                  SelectedValues.length > 1\n                    ? (labelScale.bandwidth() * multiBarPadding) /\n                      (SelectedValues.length - 1) /\n                      100\n                    : 0;\n                let height =\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\n                  SelectedValues.length;\n\n                g1.append('text')\n                  .text(function (d) {\n                    if (endCol != -1) {\n                      return (Number(d[endCol]) * ScaleFactor).toFixed(\n                        ValueDecimals\n                      );\n                    } else {\n                      return (Number(d[valueCol]) * ScaleFactor).toFixed(\n                        ValueDecimals\n                      );\n                    }\n                  })\n                  .attr('x', function (d) {\n                    if (panel.ValuePosition == 'bar base')\n                      return valueScale(baseLineValue);\n                    else {\n                      // \"bar end\"\n                      var val = scaleAndClipValue(d[valueCol]);\n                      return valueScale(val) + (val > baseLineValue);\n                    }\n                  })\n                  .attr('y', function (d, i) {\n                    return (\n                      labelScale(d[labelCol]) +\n                      height / 2 +\n                      (height + gap) * index\n                    );\n                  })\n                  .attr('font-family', 'sans-serif')\n                  .attr('font-size', panel.ValueFontSize)\n                  .attr('fill', panel.ValueColor)\n                  .attr('text-anchor', function (d) {\n                    if (panel.ValuePosition == 'bar base')\n                      return d[valueCol] * ScaleFactor > baseLineValue\n                        ? 'start'\n                        : 'end';\n                    // \"bar end\"\n                    else\n                      return d[valueCol] * ScaleFactor > baseLineValue\n                        ? 'end'\n                        : 'start';\n                  })\n                  .attr('dominant-baseline', 'central');\n              }\n            });\n          }\n\n          svg\n            .append('g')\n            .selectAll('rect')\n            .data(stripedata)\n            .enter()\n            .append('rect')\n            .attr('width', w)\n            .attr('height', stripeScale.step())\n            .attr('x', left)\n            .attr('y', function (d) {\n              return stripeScale(d);\n            })\n            .attr('fill', 'rgba(0,0,0,0)')\n            .attr('stroke', OutlineColor)\n            .on('mouseover', function (d) {\n              if ((tooltipType && Array.isArray(d)) || Links.length)\n                tooltipShow(d);\n            })\n            .on('mouseleave', function () {\n              if (!isInTooltip) {\n                tooltipHide(false);\n              }\n            });\n\n          // Add High Side Value Axis (X)\n          if (highSideMargin > 0) {\n            var ggHighSide = svg\n              .append('g')\n              .attr('transform', 'translate(1,' + (hh + highSideMargin) + ')')\n              .attr('class', 'michaeldmoore-multistat-panel-valueaxis')\n              .call(d3.axisTop(valueScale));\n\n            ggHighSide\n              .selectAll('.tick text')\n              .attr('fill', panel.HighAxisColor);\n\n            ggHighSide\n              .selectAll('.tick line')\n              .attr('stroke', panel.HighAxisColor)\n              .attr('stroke-width', panel.HighAxisWidth);\n\n            ggHighSide\n              .selectAll('path.domain')\n              .attr('stroke', panel.HighAxisColor)\n              .attr('stroke-width', panel.HighAxisWidth);\n          }\n\n          // Add Low Side Value Axis (X)\n          if (lowSideMargin > 0) {\n            var ggLowSide = svg\n              .append('g')\n              .attr(\n                'transform',\n                'translate(0,' + (hh + dh - lowSideMargin) + ')'\n              )\n              .attr('class', 'michaeldmoore-multistat-panel-valueaxis')\n              .call(d3.axisBottom(valueScale));\n\n            ggLowSide.selectAll('.tick text').attr('fill', panel.LowAxisColor);\n\n            ggLowSide\n              .selectAll('.tick line')\n              .attr('stroke', panel.LowAxisColor)\n              .attr('stroke-width', panel.LowAxisWidth);\n\n            ggLowSide\n              .selectAll('path.domain')\n              .attr('stroke', panel.LowAxisColor)\n              .attr('stroke-width', panel.LowAxisWidth);\n          }\n        };\n\n        if (this.groupedRows != null) {\n          var gcols =\n            GroupCols <= 0 || GroupCols > this.groupedRows.length\n              ? this.groupedRows.length\n              : GroupCols;\n          var dw = (w + GroupGap) / gcols;\n\n          // Figure out the max data points in each row of groups...\n          var pointsPerRow = [];\n          for (let i = 0; i < this.groupedRows.length / gcols; i++)\n            pointsPerRow.push(0);\n          for (let i = 0; i < this.groupedRows.length; i++) {\n            let rr = Math.floor(i / gcols);\n            let u = this.groupedRows[i].values.length;\n            if (pointsPerRow[rr] < u) pointsPerRow[rr] = u;\n          }\n\n          var totalPoints = 0;\n          for (let i = 0; i < pointsPerRow.length; i++)\n            totalPoints += pointsPerRow[i];\n\n          var rowOverheadHeight =\n            groupNameOffset +\n            this.panel.LowSideMargin +\n            this.panel.HighSideMargin;\n          var rowHeight =\n            (h - pointsPerRow.length * rowOverheadHeight) / totalPoints;\n\n          var numRows = Math.ceil(this.groupedRows.length / gcols);\n          var hh = 0;\n          for (var rr = 0; rr < numRows; rr++) {\n            var nn = pointsPerRow[rr];\n            var dh = rowOverheadHeight + nn * rowHeight;\n            hh += dh;\n            for (var cc = 0; cc < gcols; cc++) {\n              var ii = cc + rr * gcols;\n              if (ii < this.groupedRows.length) {\n                plotGroupHorizontal(\n                  this.panel,\n                  this.svg,\n                  this.groupedRows[ii].values,\n                  nn,\n                  this.groupedRows[ii].key,\n                  groupNameOffset,\n                  cc * dw,\n                  dw - GroupGap,\n                  hh - dh,\n                  dh\n                );\n              }\n            }\n          }\n        } else {\n          plotGroupHorizontal(\n            this.panel,\n            this.svg,\n            this.rows,\n            this.rows.length,\n            '',\n            0,\n            0,\n            w,\n            0,\n            h\n          );\n        }\n      } else {\n        var plotGroupVertical = function (\n          panel,\n          svg,\n          data,\n          numRows,\n          groupName,\n          groupNameOffset,\n          left,\n          w,\n          hh,\n          dh\n        ) {\n          // Draw border rectangle\n          /*svg.append(\"rect\")\n\t\t\t.attr(\"width\", w)\n\t\t\t.attr(\"height\", dh)\n\t\t\t.attr(\"x\", left)\n\t\t\t.attr(\"y\", hh)\n\t\t\t.attr(\"stroke\", \"yellow\");*/\n\n          sortData(data, panel.SortDirection);\n\n          // Add Above-High Side Group Names\n          if (groupName != '' && panel.ShowGroupLabels) {\n            svg\n              .append('text')\n              .text(groupName)\n              .attr('x', left + (labelMargin + w) / 2)\n              .attr('y', hh + groupNameOffset / 2)\n              .attr('font-family', 'sans-serif')\n              .attr('font-size', panel.GroupLabelFontSize)\n              .attr('fill', panel.GroupLabelColor)\n              .attr('background', 'blue')\n              .attr('text-anchor', 'middle')\n              .attr('dominant-baseline', 'central');\n          }\n\n          hh += groupNameOffset;\n          dh -= groupNameOffset;\n\n          // Draw border rectangle\n          /*svg.append(\"rect\")\n\t\t\t\t\t\t\t\t\t\t.attr(\"width\", w)\n\t\t\t\t\t\t\t\t\t\t.attr(\"height\", dh)\n\t\t\t\t\t\t\t\t\t\t.attr(\"x\", left)\n\t\t\t\t\t\t\t\t\t\t.attr(\"y\", hh)\n\t\t\t\t\t\t\t\t\t\t.attr(\"stroke\", \"#ffffff\");*/\n\n          var labels = data.map(function (d) {\n            return d[labelCol];\n          });\n          while (labels.length < numRows)\n            labels = labels.concat(\n              '_' + Math.random().toString(36).substr(2, 9)\n            );\n\n          var labelScale = d3\n            .scaleBand()\n            .domain(labels)\n            .range([left + lowSideMargin, left + w - highSideMargin])\n            .paddingInner(barPadding / 100)\n            .paddingOuter(barPadding / 200);\n\n          var stripedata = data.concat(d3.range(data.length, numRows));\n\n          var stripeScale = d3\n            .scaleBand()\n            .domain(stripedata)\n            .range([left + lowSideMargin, left + w - highSideMargin]);\n\n          // Draw background of alternating stripes\n          var oddeven = false;\n          svg\n            .append('g')\n            .selectAll('rect')\n            .data(stripedata)\n            .enter()\n            .append('rect')\n            .attr('class', 'michaeldmoore-multistat-panel-row')\n            .attr('width', stripeScale.step())\n            .attr('height', dh)\n            .attr('x', function (d, i) {\n              return stripeScale(d);\n            })\n            .attr('y', hh)\n            .attr('fill', function (d) {\n              oddeven = !oddeven;\n              return oddeven ? OddRowColor : EvenRowColor;\n            });\n\n          var g2 = svg\n            .append('g')\n            .selectAll('text')\n            .data(data)\n            .enter()\n            .append('g');\n\n          if (panel.ShowValues && panel.ValuePosition == 'top') {\n            var maxValueHeight = 0;\n\n            SelectedValues.forEach((valueDef, index) => {\n              let valueCol = valueDef.Col;\n              if (valueCol >= 0) {\n                let gap =\n                  SelectedValues.length > 1\n                    ? (labelScale.bandwidth() * multiBarPadding) /\n                      (SelectedValues.length - 1) /\n                      100\n                    : 0;\n                let width =\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\n                  SelectedValues.length;\n\n                g2.append('text')\n                  .text(function (d) {\n                    return (Number(d[valueCol]) * ScaleFactor).toFixed(\n                      ValueDecimals\n                    );\n                  })\n                  .attr('x', function (d, i) {\n                    return (\n                      labelScale(d[labelCol]) +\n                      width / 2 +\n                      (width + gap) * index\n                    );\n                  })\n                  .attr('y', hh)\n                  .attr('font-family', 'sans-serif')\n                  .attr('font-size', panel.ValueFontSize)\n                  .attr('fill', panel.ValueColor)\n                  .attr('text-anchor', 'middle')\n                  .attr('dominant-baseline', 'text-before-edge')\n                  .each(function (d, i) {\n                    var thisHeight = this.getBBox().height;\n                    maxValueHeight = d3.max([maxValueHeight, thisHeight]);\n                  });\n              }\n            });\n\n            hh += maxValueHeight;\n            dh -= maxValueHeight;\n          }\n\n          if (panel.ShowLabels) {\n            var maxLabelHeight = 0;\n            var labelAngle = Number(panel.LableAngle);\n            g2.append('text')\n              .text(function (d) {\n                return d[labelCol];\n              })\n              .attr('font-family', 'sans-serif')\n              .attr('font-size', panel.LabelFontSize)\n              .attr('fill', function (d, i) {\n                if (SelectedValues.length) {\n                  // This should check ALL the SelectedValues, bot just [0]///////////////////////////////////////////////\n                  let minvalue = d[SelectedValues[0].Col] * ScaleFactor;\n                  let maxvalue = minvalue;\n\n                  if (maxvalue > maxLineValue || minvalue < minLineValue)\n                    return panel.OutOfRangeLabelColor;\n                }\n                return panel.LabelColor;\n              })\n              .attr('text-anchor', 'middle')\n              .attr('dominant-baseline', 'central')\n              .attr('transform', function (d, i) {\n                var bbox = this.getBBox();\n                var s = Math.sin((labelAngle * Math.PI) / 180);\n                var c = Math.cos((labelAngle * Math.PI) / 180);\n                var b = Math.abs(bbox.width * s) + Math.abs(bbox.height * c);\n                var a = Math.abs(bbox.width * c) + Math.abs(bbox.height * s);\n\n                var x = labelScale(d[labelCol]) + labelScale.bandwidth() / 2;\n                var y = hh + dh - b / 2;\n                return (\n                  'translate(' + x + ',' + y + ') rotate(' + labelAngle + ')'\n                );\n              })\n              .each(function (d, i) {\n                var bbox = this.getBBox();\n                var s = Math.sin((labelAngle * Math.PI) / 180);\n                var c = Math.cos((labelAngle * Math.PI) / 180);\n                var b = Math.abs(bbox.width * s) + Math.abs(bbox.height * c);\n                var a = Math.abs(bbox.width * c) + Math.abs(bbox.height * s);\n\n                var thisHeight = b;\n                maxLabelHeight = d3.max([maxLabelHeight, thisHeight]);\n              });\n            if ($.isNumeric(labelMargin)) {\n              dh -= labelMargin;\n            } else {\n              dh -= maxLabelHeight;\n            }\n          }\n\n          var valueScale = d3\n            .scaleLinear()\n            .domain([maxLineValue, minLineValue])\n            .range([hh, hh + dh])\n            .nice();\n\n          function hLine(svg, value, color, strokeWidth) {\n            svg\n              .append('line')\n              .style('stroke', color)\n              .attr('stroke-width', strokeWidth == null ? 1 : strokeWidth)\n              .attr('x1', left + lowSideMargin)\n              .attr('y1', valueScale(value))\n              .attr('x2', left + w - highSideMargin)\n              .attr('y2', valueScale(value));\n          }\n\n          if (panel.ShowBaseLine)\n            hLine(svg, baseLineValue, panel.BaseLineColor, panel.BaseLineWidth);\n\n          if (panel.ShowMaxLine)\n            hLine(svg, maxLineValue, panel.MaxLineColor, panel.MaxLineWidth);\n\n          if (panel.ShowMinLine)\n            hLine(svg, minLineValue, panel.MinLineColor, panel.MinLineWidth);\n\n          if (panel.ShowHighLimitLine)\n            hLine(\n              svg,\n              highLimitValue,\n              panel.HighLimitLineColor,\n              panel.HighLimitLineWidth\n            );\n\n          if (panel.ShowLowLimitLine)\n            hLine(\n              svg,\n              lowLimitValue,\n              panel.LowLimitLineColor,\n              panel.LowLimitLineWidth\n            );\n\n          if (panel.ShowBars) {\n            SelectedValues.forEach((valueDef, index) => {\n              let valueCol = valueDef.Col;\n              if (valueCol >= 0) {\n                let gap =\n                  SelectedValues.length > 1\n                    ? (labelScale.bandwidth() * multiBarPadding) /\n                      (SelectedValues.length - 1) /\n                      100\n                    : 0;\n                let width =\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\n                  SelectedValues.length;\n\n                g2.append('rect')\n                  .attr('class', 'michaeldmoore-multistat-panel-bar')\n                  .attr('height', function (d) {\n                    var val = scaleAndClipValue(d[valueCol]);\n                    return Math.abs(\n                      valueScale(baseLineValue) - valueScale(val)\n                    );\n                  })\n                  .attr('width', width)\n                  .attr('y', function (d) {\n                    var val = scaleAndClipValue(d[valueCol]);\n                    return d3.min([valueScale(val), valueScale(baseLineValue)]);\n                  })\n                  .attr('x', function (d, i) {\n                    return labelScale(d[labelCol]) + (width + gap) * index;\n                  })\n                  .attr('fill', function (d) {\n                    return getBarColor(d, valueDef);\n                  })\n                  .classed('highflash', function (d) {\n                    return (\n                      recolorHighLimitBar &&\n                      flashHighLimitBar &&\n                      d[valueCol] * ScaleFactor > highLimitValue\n                    );\n                  })\n                  .classed('lowflash', function (d) {\n                    return (\n                      recolorLowLimitBar &&\n                      flashLowLimitBar &&\n                      d[valueCol] * ScaleFactor < lowLimitValue\n                    );\n                  });\n              }\n            });\n          }\n\n          if (panel.ShowLines) {\n            var bw = labelScale.step();\n\n            if (panel.LineWidth) {\n              var curveFunc = d3.curveLinear;\n              switch (panel.CurveType) {\n                case 'Linear':\n                  curveFunc = d3.curveLinear;\n                  break;\n                case 'Monotone':\n                  curveFunc = d3.curveMonotoneX;\n                  break;\n                case 'Cardinal':\n                  curveFunc = d3.curveCardinal;\n                  break;\n                case 'Catmull-Rom':\n                  curveFunc = d3.curveCatmullRom;\n                  break;\n              }\n\n              var lineFunction = d3\n                .line()\n                .curve(curveFunc)\n                .x(function (d) {\n                  return d.x;\n                })\n                .y(function (d) {\n                  return d.y;\n                });\n\n              SelectedValues.forEach((value, index) => {\n                let gap =\n                  SelectedValues.length > 1\n                    ? (labelScale.bandwidth() * multiBarPadding) /\n                      (SelectedValues.length - 1) /\n                      100\n                    : 0;\n                let width =\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\n                  SelectedValues.length;\n\n                if (panel.LineWidth) {\n                  var points = [];\n                  for (var i = 0; i < data.length; i++) {\n                    var d = data[i];\n                    var x =\n                      labelScale(d[labelCol]) +\n                      width / 2 +\n                      (width + gap) * index;\n                    var y = valueScale(d[value.Col] * ScaleFactor);\n                    points.push({\n                      x,\n                      y,\n                    });\n                  }\n\n                  svg\n                    .append('path')\n                    .attr('d', lineFunction(points))\n                    .attr('stroke', panel.LineColor)\n                    .attr('stroke-width', panel.LineWidth)\n                    .attr('fill', 'none');\n                }\n\n                if (panel.DotSize) {\n                  g2.append('circle')\n                    .attr('r', panel.DotSize / 2.0)\n                    .attr('fill', panel.DotColor)\n                    .attr('cx', function (d) {\n                      return (\n                        labelScale(d[labelCol]) +\n                        width / 2 +\n                        (width + gap) * index\n                      );\n                    })\n                    .attr('cy', function (d) {\n                      return valueScale(d[value.Col] * ScaleFactor);\n                    });\n                }\n              });\n            }\n          }\n\n          if (panel.ShowValues && panel.ValuePosition != 'top') {\n            SelectedValues.forEach((valueDef, index) => {\n              let valueCol = valueDef.Col;\n              if (valueCol >= 0) {\n                let gap =\n                  SelectedValues.length > 1\n                    ? (labelScale.bandwidth() * multiBarPadding) /\n                      (SelectedValues.length - 1) /\n                      100\n                    : 0;\n                let width =\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\n                  SelectedValues.length;\n\n                g2.append('text')\n                  .text(function (d) {\n                    return (Number(d[valueCol]) * ScaleFactor).toFixed(\n                      ValueDecimals\n                    );\n                  })\n                  .attr('x', function (d, i) {\n                    return (\n                      labelScale(d[labelCol]) +\n                      width / 2 +\n                      (width + gap) * index\n                    );\n                  })\n                  .attr('y', function (d) {\n                    if (ValuePosition == 'bar base')\n                      return valueScale(baseLineValue);\n                    else {\n                      var val = scaleAndClipValue(d[valueCol]);\n                      return valueScale(val);\n                    }\n                  })\n                  .attr('font-family', 'sans-serif')\n                  .attr('font-size', panel.ValueFontSize)\n                  .attr('fill', panel.ValueColor)\n                  .attr('text-anchor', 'middle')\n                  .attr('dominant-baseline', function (d) {\n                    if (ValuePosition == 'bar base')\n                      return d[valueCol] * ScaleFactor > baseLineValue\n                        ? 'text-after-edge'\n                        : 'text-before-edge';\n                    else\n                      return d[valueCol] * ScaleFactor > baseLineValue\n                        ? 'text-before-edge'\n                        : 'text-after-edge';\n                  });\n              }\n            });\n          }\n\n          svg\n            .append('g')\n            .selectAll('rect')\n            .data(stripedata)\n            .enter()\n            .append('rect')\n            .attr('width', stripeScale.step())\n            .attr('height', dh)\n            .attr('x', function (d) {\n              return stripeScale(d);\n            })\n            .attr('y', hh)\n            .attr('fill', 'rgba(0,0,0,0)')\n            .attr('stroke', OutlineColor)\n            .on('mouseover', function (d) {\n              if ((tooltipType && Array.isArray(d)) || Links.length)\n                tooltipShow(d);\n            })\n            .on('mouseleave', function () {\n              if (!isInTooltip) {\n                tooltipHide(false);\n              }\n            });\n\n          if (lowSideMargin > 0) {\n            let ggLowSide = svg\n              .append('g')\n              .attr('transform', 'translate(' + (left + lowSideMargin) + ', 0)')\n              .classed('michaeldmoore-multistat-panel-valueaxis', true)\n              .call(\n                d3\n                  .axisLeft(valueScale)\n                  .tickSizeInner(5)\n                  .tickSizeOuter(10)\n                  .ticks(5)\n              );\n            ggLowSide.selectAll('.tick text').attr('fill', panel.LowAxisColor);\n            ggLowSide\n              .selectAll('.tick line')\n              .attr('stroke', panel.LowAxisColor)\n              .attr('stroke-width', panel.LowAxisWidth);\n            ggLowSide\n              .selectAll('path.domain')\n              .attr('stroke', panel.LowAxisColor)\n              .attr('stroke-width', panel.LowAxisWidth);\n          }\n\n          if (highSideMargin > 0) {\n            let ggHighSide = svg\n              .append('g')\n              .attr(\n                'transform',\n                'translate(' + (left + w - highSideMargin) + ', 0)'\n              )\n              .classed('michaeldmoore-multistat-panel-valueaxis', true)\n              .call(\n                d3\n                  .axisRight(valueScale)\n                  .tickSizeInner(5)\n                  .tickSizeOuter(10)\n                  .ticks(5)\n              );\n            ggHighSide\n              .selectAll('.tick text')\n              .attr('fill', panel.HighAxisColor);\n            ggHighSide\n              .selectAll('.tick line')\n              .attr('stroke', panel.HighAxisColor)\n              .attr('stroke-width', panel.HighAxisWidth);\n            ggHighSide\n              .selectAll('path.domain')\n              .attr('stroke', panel.HighAxisColor)\n              .attr('stroke-width', panel.HighAxisWidth);\n          }\n        };\n\n        let groupNameOffset = this.panel.ShowGroupLabels\n          ? Number(this.panel.GroupLabelFontSize.replace('%', '')) * 0.15\n          : 0;\n\n        if (this.groupedRows != null) {\n          let gcols =\n            GroupCols <= 0 || GroupCols > this.groupedRows.length\n              ? this.groupedRows.length\n              : GroupCols;\n          let dw = (w + GroupGap) / gcols;\n\n          // Figure out the max data points in each column of groups...\n          var pointsPerCol = [];\n          for (let i = 0; i < gcols; i++) pointsPerCol.push(0);\n          for (let i = 0; i < this.groupedRows.length; i++) {\n            let cc = i % gcols;\n            let u = this.groupedRows[i].values.length;\n            if (pointsPerCol[cc] < u) pointsPerCol[cc] = u;\n          }\n\n          let totalPoints = 0;\n          for (let i = 0; i < pointsPerCol.length; i++)\n            totalPoints += pointsPerCol[i];\n\n          var colOverheadWidth =\n            this.panel.LowSideMargin + this.panel.HighSideMargin;\n          var colWidth =\n            (w - pointsPerCol.length * colOverheadWidth) / totalPoints;\n\n          let numRows = Math.ceil(this.groupedRows.length / gcols);\n          let dh = h / numRows;\n          let hh = dh;\n          for (let rr = 0; rr < numRows; rr++) {\n            let ww = 0;\n            for (let cc = 0; cc < gcols; cc++) {\n              let nn = pointsPerCol[cc];\n\n              let ii = cc + rr * gcols;\n              if (ii < this.groupedRows.length) {\n                plotGroupVertical(\n                  this.panel,\n                  this.svg,\n                  this.groupedRows[ii].values,\n                  nn,\n                  this.groupedRows[ii].key,\n                  groupNameOffset,\n                  ww,\n                  dw - GroupGap,\n                  hh - dh,\n                  dh\n                );\n                ww += dw;\n              }\n            }\n            hh += dh;\n          }\n        } else {\n          plotGroupVertical(\n            this.panel,\n            this.svg,\n            this.rows,\n            this.rows.length,\n            '',\n            0,\n            0,\n            w,\n            0,\n            h\n          );\n        }\n      }\n\n      var pulseHigh = function (svg) {\n        var highFlashRects = svg.selectAll(\n          'rect.michaeldmoore-multistat-panel-bar.highflash'\n        );\n\n        if (\n          $.isNumeric(HighLimitBarFlashTimeout) &&\n          highFlashRects._groups.length > 0 &&\n          highFlashRects._groups[0].length > 0\n        ) {\n          highFlashRects.transition().on('start', function highRepeat() {\n            d3.active(this)\n              .style('fill', HighLimitBarFlashColor)\n              .duration(HighLimitBarFlashTimeout)\n              .transition()\n              .style('fill', HighLimitBarColor)\n              .duration(HighLimitBarFlashTimeout)\n              .transition()\n              .on('start', highRepeat);\n          });\n        }\n      };\n\n      var pulseLow = function (svg) {\n        var lowFlashRects = svg.selectAll(\n          'rect.michaeldmoore-multistat-panel-bar.lowflash'\n        );\n        if (\n          $.isNumeric(LowLimitBarFlashTimeout) &&\n          lowFlashRects._groups.length > 0 &&\n          lowFlashRects._groups[0].length > 0\n        ) {\n          lowFlashRects.transition().on('start', function lowRepeat() {\n            d3.active(this)\n              .style('fill', LowLimitBarFlashColor)\n              .duration(LowLimitBarFlashTimeout)\n              .transition()\n              .style('fill', LowLimitBarColor)\n              .duration(LowLimitBarFlashTimeout)\n              .transition()\n              .on('start', lowRepeat);\n          });\n        }\n      };\n\n      pulseHigh(this.svg);\n      pulseLow(this.svg);\n    }\n\n    /*\n    var drag = d3.drag()\n      .on(\"drag\", function () {\n        d3.select(this).attr(\"cx\", d3.event.x).attr(\"cy\", d3.event.y);\n      });\n\n    if (!this.panel.Legend) {\n      this.svg\n        .append(\"rect\")\n        .attr(\"x\", 10)\n        .attr(\"y\", 20)\n        .attr(\"width\", 100)\n        .attr(\"height\", 200)\n        .attr(\"fill\", \"red\")\n        .attr(\"stroke\", \"yellow\")\n        .call(this.drag);\n    }\n*/\n\n    this.ctrl.renderingCompleted();\n  }\n\n  onConfigChanged() {\n    this.refresh();\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    this.ctrl = ctrl;\n    this.elem = elem;\n\n    // for backward compatability (grafana 6.6.0 and earlier)\n    var panelContentElem = elem.find('.panel-content');\n    if (panelContentElem.length) this.elem = panelContentElem;\n\n    CTRL = ctrl;\n  }\n}\n\nvar CTRL;\n\nMultistatPanelCtrl.templateUrl = 'module.html';\n\nexport { MultistatPanelCtrl as PanelCtrl };\n"]}